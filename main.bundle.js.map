{"version":3,"sources":["C:/Users/jonase/Apps/gene-sequencer/src async","C:/Users/jonase/Apps/gene-sequencer/src/app/app.component.css","C:/Users/jonase/Apps/gene-sequencer/src/app/app.component.html","C:/Users/jonase/Apps/gene-sequencer/src/app/app.component.ts","C:/Users/jonase/Apps/gene-sequencer/src/app/app.module.ts","C:/Users/jonase/Apps/gene-sequencer/src/app/gene-lookup.ts","C:/Users/jonase/Apps/gene-sequencer/src/app/mock-data.service.ts","C:/Users/jonase/Apps/gene-sequencer/src/app/sequence-form/sequence-form.component.html","C:/Users/jonase/Apps/gene-sequencer/src/app/sequence-form/sequence-form.component.less","C:/Users/jonase/Apps/gene-sequencer/src/app/sequence-form/sequence-form.component.ts","C:/Users/jonase/Apps/gene-sequencer/src/app/transform-sequence.service.ts","C:/Users/jonase/Apps/gene-sequencer/src/environments/environment.ts","C:/Users/jonase/Apps/gene-sequencer/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonase/Apps/gene-sequencer/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonase/Apps/gene-sequencer/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"page\\\">\\r\\n    <app-sequence-form></app-sequence-form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonase/Apps/gene-sequencer/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonase/Apps/gene-sequencer/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MaterialModule } from \"@angular/material\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SequenceFormComponent } from './sequence-form/sequence-form.component';\r\nimport { AngularMaterialModule } from \"./angular-material.module\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SequenceFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonase/Apps/gene-sequencer/src/app/app.module.ts","export const GeneMap = \t{\r\n\t\"TAA\": \"STOP\",\r\n\t\"TAG\": \"STOP\",\r\n\t\"TGA\": \"STOP\",\r\n\t\"GCC\": \"A\",\r\n\t\"GCT\": \"A\",\r\n\t\"GCA\": \"A\",\r\n\t\"GCG\": \"A\",\r\n\t\"TGC\": \"C\",\r\n\t\"TGT\": \"C\",\r\n\t\"GAC\": \"D\",\r\n\t\"GAT\": \"D\",\r\n\t\"GAG\": \"E\",\r\n\t\"GAA\": \"E\",\r\n\t\"TTC\": \"F\",\r\n\t\"TTT\": \"F\",\r\n\t\"GGC\": \"G\",\r\n\t\"GGG\": \"G\",\r\n\t\"GGA\": \"G\",\r\n\t\"GGT\": \"G\",\r\n\t\"CAC\": \"H\",\r\n\t\"CAT\": \"H\",\r\n\t\"ATC\": \"I\",\r\n\t\"ATT\": \"I\",\r\n\t\"ATA\": \"I\",\r\n\t\"AAG\": \"K\",\r\n\t\"AAA\": \"K\",\r\n\t\"CTG\": \"L\",\r\n\t\"CTC\": \"L\",\r\n\t\"CTT\": \"L\",\r\n\t\"CTA\": \"L\",\r\n\t\"TTG\": \"L\",\r\n\t\"TTA\": \"L\",\r\n\t\"ATG\": \"M\",\r\n\t\"AAC\": \"N\",\r\n\t\"AAT\": \"N\",\r\n\t\"CCC\": \"P\",\r\n\t\"CCT\": \"P\",\r\n\t\"CCA\": \"P\",\r\n\t\"CCG\": \"P\",\r\n\t\"CAG\": \"Q\",\r\n\t\"CAA\": \"Q\",\r\n\t\"CGC\": \"R\",\r\n\t\"CGG\": \"R\",\r\n\t\"CGA\": \"R\",\r\n\t\"CGT\": \"R\",\r\n\t\"AGG\": \"R\",\r\n\t\"AGA\": \"R\",\r\n\t\"TCC\": \"S\",\r\n\t\"TCT\": \"S\",\r\n\t\"TCA\": \"S\",\r\n\t\"TCG\": \"S\",\r\n\t\"AGC\": \"S\",\r\n\t\"AGT\": \"S\",\r\n\t\"ACC\": \"T\",\r\n\t\"ACA\": \"T\",\r\n\t\"ACT\": \"T\",\r\n\t\"ACG\": \"T\",\r\n\t\"GTG\": \"V\",\r\n\t\"GTC\": \"V\",\r\n\t\"GTT\": \"V\",\r\n\t\"GTA\": \"V\",\r\n\t\"TGG\": \"W\",\r\n\t\"TAC\": \"Y\",\r\n\t\"TAT\": \"Y\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonase/Apps/gene-sequencer/src/app/gene-lookup.ts","export const MockInput = {\r\n  name: \"exon 7\",\r\n  rawdata: \"CTCTCTCTAGCTCGCTAGTGGGTTGCAGGAGGTGCTTACGCATGTTTGTTTCTTTGCTGCCGTCTTCCAGTTGCTTTATCTGTTCACTTGTGCCCTGACTTTCAACTCTGTCTCCTTCCTCTTCCTACAGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTGAGCAGCTGGGGCTGGAGAGACGACAGGGCTGGTTGCCC\",\r\n  startIntron: \"c.376-130\",\r\n  endIntron: \"c.559+41\",\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonase/Apps/gene-sequencer/src/app/mock-data.service.ts","module.exports = \"<md-input-container class=\\\"full-width\\\">\\r\\n  <textarea [rows]=\\\"6\\\" mdInput #message placeholder=\\\"Sekvens\\\" [(ngModel)]=\\\"sequence\\\" ></textarea>\\r\\n  <md-hint align=\\\"start\\\"> </md-hint>\\r\\n  <md-hint align=\\\"end\\\">{{message.value.length}} tegn</md-hint>\\r\\n</md-input-container>\\r\\n\\r\\n<md-input-container >\\r\\n  <input mdInput placeholder=\\\"Startende intron\\\" value=\\\"c.00-00\\\" [(ngModel)]=\\\"startIntron\\\">\\r\\n</md-input-container>\\r\\n\\r\\n<md-input-container >\\r\\n  <input mdInput placeholder=\\\"Sluttende intron\\\" value=\\\"c.00-00\\\" [(ngModel)]=\\\"endIntron\\\">\\r\\n</md-input-container>\\r\\n\\r\\n<md-select placeholder=\\\"Lengde første kodon\\\" [(ngModel)]=\\\"leadingCodonSize\\\">\\r\\n   <md-option *ngFor=\\\"let state of codonSizes\\\" [value]=\\\"state\\\">{{ state }}</md-option>\\r\\n</md-select>\\r\\n\\r\\n\\r\\n<div>\\r\\n  <md-input-container >\\r\\n    <input mdInput placeholder=\\\"Mutasjon\\\" #mutation (paste)=\\\"handlePaste(mutation.value)\\\">\\r\\n    <md-hint align=\\\"start\\\">c.00 A>C</md-hint>\\r\\n  </md-input-container>\\r\\n\\r\\n  <button (click)=\\\"mutations.push(mutation.value)\\\" md-mini-fab><md-icon>add</md-icon></button>\\r\\n  <button (click)=\\\"submitInput()\\\" md-raised-button>Kalkuler</button>\\r\\n\\r\\n  <md-chip-list>\\r\\n    <md-chip *ngFor=\\\"let mutation of mutations; let idx = index\\\" (click)=\\\"mutations.splice(idx, 1)\\\">{{ mutation }}</md-chip>\\r\\n  </md-chip-list>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<hr>\\r\\n<br>\\r\\n\\r\\n<div style=\\\"text-align: right\\\">\\r\\n  <md-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"showGenes\\\">Vis gener</md-checkbox>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n<div class=\\\"grouped-sequence\\\">\\r\\n  <span *ngFor=\\\"let group of transformed.StartIntron\\\" class=\\\"group\\\">\\r\\n    <span *ngFor=\\\"let letter of group.AminoLetters\\\">{{ letter.Letter }}</span>\\r\\n  </span>\\r\\n</div>\\r\\n\\r\\n\\r\\n<br><br>\\r\\n<div class=\\\"grouped-sequence\\\">\\r\\n  <span *ngFor=\\\"let group of transformed.Exon\\\" class=\\\"group group-exon\\\">\\r\\n    <span class=\\\"gene\\\" *ngIf=\\\"showGenes\\\">{{ group.Gene || '&nbsp;' }}</span>\\r\\n    <span *ngFor=\\\"let letter of group.AminoLetters\\\" [class.mutated]=\\\"letter.Mutated\\\">{{ letter.Letter }}</span>\\r\\n  </span>\\r\\n</div>\\r\\n\\r\\n<br><br>\\r\\n\\r\\n<div class=\\\"grouped-sequence\\\">\\r\\n  <span *ngFor=\\\"let group of transformed.EndIntron\\\" class=\\\"group\\\">\\r\\n    <span *ngFor=\\\"let letter of group.AminoLetters\\\">{{ letter.Letter }}</span>\\r\\n  </span>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonase/Apps/gene-sequencer/src/app/sequence-form/sequence-form.component.html\n// module id = ../../../../../src/app/sequence-form/sequence-form.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".full-width {\\n  width: 100%;\\n}\\n.grouped-sequence {\\n  display: inline-block;\\n  font-family: 'Roboto Mono', monospace;\\n}\\n.grouped-sequence .group {\\n  display: inline-block;\\n  border: 1px solid #eeeeee;\\n  border-radius: 1px;\\n  margin-right: 8px;\\n  margin-bottom: 6px;\\n  line-height: 150%;\\n}\\n.grouped-sequence .group-exon {\\n  text-align: center;\\n}\\n.grouped-sequence .gene {\\n  display: inline-block;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  width: 100%;\\n  font-weight: bold;\\n}\\n.grouped-sequence .mutated {\\n  color: firebrick;\\n  font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonase/Apps/gene-sequencer/src/app/sequence-form/sequence-form.component.less\n// module id = ../../../../../src/app/sequence-form/sequence-form.component.less\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { MockInput } from \"../mock-data.service\";\r\nimport { transformRawSequence, SequenceOutput } from \"../transform-sequence.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-sequence-form',\r\n  templateUrl: './sequence-form.component.html',\r\n  styleUrls: ['./sequence-form.component.less']\r\n})\r\nexport class SequenceFormComponent implements OnInit {\r\n  transformed: SequenceOutput;\r\n\r\n  mutations = [];\r\n  startIntron = MockInput.startIntron;\r\n  endIntron = MockInput.endIntron;\r\n  sequence = MockInput.rawdata;\r\n  leadingCodonSize = 3;\r\n  codonSizes = [1,2,3];\r\n  showGenes = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.submitInput();\r\n  }\r\n\r\n  submitInput() {\r\n    this.transformed = transformRawSequence({\r\n      EndIntron: this.endIntron,\r\n      StartIntron: this.startIntron,\r\n      FirstCodonSize: this.leadingCodonSize,\r\n      Mutations: this.mutations,\r\n      RawSequence: this.sequence,\r\n    });\r\n  }\r\n\r\n  handlePaste(mutations: string) {\r\n    const newMutations = mutations.split(\",\").map(m => m.trim()).filter(m => /c\\.\\d+/.test(m));\r\n    this.mutations = this.mutations.concat(newMutations);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonase/Apps/gene-sequencer/src/app/sequence-form/sequence-form.component.ts","import { chunk } from \"lodash\";\r\nimport { GeneMap } from \"./gene-lookup\";\r\n\r\nexport interface SequenceInput {\r\n  RawSequence: string,\r\n  StartIntron: string;\r\n  EndIntron: string;\r\n  FirstCodonSize: number;\r\n  Mutations: string[];\r\n}\r\n\r\nexport interface AminoGroup {\r\n  AminoLetters: { Letter: string, Mutated?: boolean}[],\r\n  Gene?: string\r\n}\r\n\r\nexport interface SequenceOutput {\r\n  StartIntron: AminoGroup[];\r\n  Exon: AminoGroup[];\r\n  EndIntron: AminoGroup[];\r\n}\r\n\r\ninterface IntronPosition {\r\n  SequenceOffset: number;\r\n  IntronLength: number\r\n}\r\n\r\nexport function transformRawSequence(input: SequenceInput): SequenceOutput {\r\n  const [exonStartCIndex, startIntronLength] = input.StartIntron.match(/c\\.(\\d+)-?(\\d*)/).slice(1).map(Number);\r\n  const [exonEndCIndex, endIntronLength] = input.EndIntron.match(/c\\.(\\d+)\\+?(\\d*)/).slice(1).map(Number);\r\n\r\n  const rawStartIntron = input.RawSequence.substring(0, startIntronLength);\r\n  const rawExon = input.RawSequence.substring(startIntronLength, exonEndCIndex - exonStartCIndex + startIntronLength + 1);\r\n  const rawEndIntron = input.RawSequence.substring(startIntronLength + rawExon.length, startIntronLength + rawExon.length + endIntronLength + 1);\r\n\r\n  return {\r\n    StartIntron: transformRawIntron(rawStartIntron, input),\r\n    Exon: transformRawExon(rawExon, input, exonStartCIndex),\r\n    EndIntron: transformRawEndIntron(rawEndIntron, input),\r\n  }\r\n}\r\n\r\nfunction transformRawIntron(sequence: string, input: SequenceInput): AminoGroup[] {\r\n  return chunk(sequence.split(\"\").reverse(), 10).reverse().map(group => ({\r\n    AminoLetters: group.reverse().map(letter => ({ Letter: letter })),\r\n  }));\r\n}\r\n\r\nfunction transformRawEndIntron(sequence: string, input: SequenceInput): AminoGroup[] {\r\n  return chunk(sequence, 10).map(group => ({\r\n    AminoLetters: group.map(letter => ({ Letter: letter })),\r\n  }));\r\n}\r\n\r\nfunction transformRawExon(sequence: string, input: SequenceInput, exonStartCIndex: number): AminoGroup[] {\r\n  const padding = input.FirstCodonSize === 3 ? \"\" : input.FirstCodonSize === 2 ? \" \" : \"  \";\r\n  const sequenceWithMutations = (padding + sequence).split(\"\")\r\n    .map((letter, index) => ({ Letter: letter, Mutated: isMutated(index) }));\r\n  return chunk(sequenceWithMutations, 3).map(group => ({\r\n    AminoLetters: group,\r\n    Gene: GeneMap[group.map(letter => letter.Letter).join(\"\")],\r\n  }));\r\n\r\n  function isMutated(index): boolean {\r\n    return input.Mutations.some(mutation => {\r\n      const [offset, conversion] = mutation.match(/c\\.(\\d+)\\s*(.*)/).splice(1);\r\n      return Number(offset) === index + exonStartCIndex;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonase/Apps/gene-sequencer/src/app/transform-sequence.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonase/Apps/gene-sequencer/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonase/Apps/gene-sequencer/src/main.ts"],"sourceRoot":"webpack:///"}